match(m)-[r]->(n)delete(r)delete(m)delete(n); 
create (:Metaheuristiques{name:'Metaheuristiques'})-[:relatedTo]->(:Pareto{name:'Pareto'});

create (cancer:Maladie{name:'CANCER',type:'entity'});
create (cancerColon:Maladie{name:'CANCERcolon',type:'entity'});
create (cancerColon{age:50,idd:'cancerColon'})-[:relatedTo]->(cancer)-[:relatedTo]->(selles); 


//create (cancerColonExample{type:'example',url:'https://www.facebook.com/jeanmarc.majeau.9/videos/657545401536787'})-[:relatedTo]->(cancerColon)
//TODO : by variable instead of properties
create (cancerColonExample{idd:'cancerColonExample',type:'example',url:'https://www.facebook.com/jeanmarc.majeau.9/videos/657545401536787'});
match(ex),(cancColon)
  where ex.idd='cancerColonExample' and cancColon.idd='cancerColon'
    create(cancerColonExample)-[rel:relatedTo]->(cancerColon)
return ex,rel,cancColon

//photogrammetry FunArcheo, Blender
//CSP-COP -> placement > heuristiques
//IA -> non supervisÃ©
